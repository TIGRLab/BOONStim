scc_base = '/KIMEL/tigrlab/'
executor = 'local'
params.bin = "${scc_base}/${bin}"
params.coil = "${scc_base}/${coil}"
params.simg = "${scc_base}/${simg}"
params.ciftify_img = "${scc_base}/${ciftify_img}"
params.ciftify_invocation = "${scc_base}/${ciftify_invocation}"
params.ciftify_descriptor = "${scc_base}/${ciftify_descriptor}"
params.fmriprep_img = "${scc_base}/${fmriprep_img}"
params.anat_invocation = "${scc_base}/${anat_invocation}"
params.anat_descriptor = "${scc_base}/${anat_descriptor}"
params.license = "${scc_base}/${license}"
params.freesurfer = "${scc_base}/${freesurfer}"
params.connectome = "${scc_base}/${connectome}"
params.atlas = "${scc_base}/${atlas}"
params.msm = "${scc_base}/${msm}"
params.weightworkflow = "${scc_base}/${weightworkflow}"
params.work = "/export/ramdisk"
params.cpus = num_cpus
process {

    withName: fmriprep_anat {
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        scratch = "${params.work}"
    }

    withName: ciftify{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        scratch = "${params.work}"
    }

    withName: mri2mesh{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "${scc_base}/${simnibs3_img}"
        containerOptions = "-B ${params.license}:/license"
        scratch = "${params.work}"
    }

    withName: mri2mesh_brain{
        container = "${scc_base}/${simnibs3_img}"
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        containerOptions = "-B ${params.license}:/license"
        scratch = "${params.work}"
    }

    withLabel: connectome{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        container = "${connectome_img}"
    }

    withName: optimize_coil{
        errorStrategy = {task.attempt == 3 ? "finish" : "retry"}
        scratch = "${params.work}"
    }

    withLabel: freesurfer{ container = "${scc_base}/${freesurfer_img}" }
    withLabel: rtms{ container ="${scc_base}/${rtms_img}" }
    withLabel: gmsh4{ container ="${scc_base}/${rtms_img}" }
    withLabel: ciftify { container = "${scc_base}/${ciftify_img}" }
}

